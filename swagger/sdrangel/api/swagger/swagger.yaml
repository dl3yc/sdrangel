swagger: "2.0"
info:
  description: >
    This is the web REST/JSON API of SDRangel SDR software. SDRangel is an Open Source Qt5/OpenGL 3.0+ (4.3+ in Windows) GUI and server Software Defined Radio and signal analyzer in software. It supports Airspy, BladeRF, HackRF, LimeSDR, PlutoSDR, RTL-SDR, SDRplay RSP1 and FunCube

      ---
      Limitations and specifcities:

      * In SDRangel GUI the first Rx device set cannot be deleted. Conversely the server starts with no device sets and its number of device sets can be reduced to zero by as many calls as necessary to /sdrangel/deviceset with DELETE method.
      * Preset import and export from/to file is a server only feature.
      * Device set focus is a GUI only feature.
      * The following channels are not implemented (status 501 is returned): ATV and DATV demodulators, Channel Analyzer NG, LoRa demodulator
      * The device settings and report structures contains only the sub-structure corresponding to the device type. The DeviceSettings and DeviceReport structures documented here shows all of them but only one will be or should be present at a time
      * The channel settings and report structures contains only the sub-structure corresponding to the channel type. The ChannelSettings and ChannelReport structures documented here shows all of them but only one will be or should be present at a time

      ---

  version: "4.14.0"
  title: SDRangel
  contact:
    url: "https://github.com/f4exb/sdrangel"
    email: "f4exb06@gmail.com"
# basePath prefixes all resource paths
basePath: /
#
schemes:
  # tip: remove http to make production-grade
  - http
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json

paths:

  /sdrangel:
    # binds a127 app logic to a route
    x-swagger-router-controller: instance
    get:
      description: SDRangel instance summary
      # used as the method name of the controller
      operationId: instanceSummary
      tags:
        - Instance
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/InstanceSummaryResponse"
        "500":
          $ref: "#/responses/Response_500"
        "501":
          $ref: "#/responses/Response_501"
    delete:
      description: Stop SDRangel instance (server only)
      # used as the method name of the controller
      operationId: instanceDelete
      tags:
        - Instance
      responses:
        "202":
          description: Message to stop the SDRangel instance was sent successfully
          schema:
            # a pointer to a definition
            $ref: "#/definitions/InstanceSummaryResponse"
        "400":
          description: Unsupported (GUI instance)
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          $ref: "#/responses/Response_500"
        "501":
          $ref: "#/responses/Response_501"

  /sdrangel/config:
    x-swagger-router-controller: instance
    get:
      description: Get the Preferences, Presets and Commands of the MainSettings saved by Qt. Supports config backup.
      operationId: instanceConfigGet
      tags:
        - Instance
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/InstanceConfigResponse"
        "500":
          $ref: "#/responses/Response_500"
        "501":
          $ref: "#/responses/Response_501"
    put:
      description: Replace the Preferences, Working preset, Presets and Commands of the MainSettings object with the contents of the payload. Supports config restore.
      operationId: instanceConfigPut
      tags:
        - Instance
      consumes:
        - application/json
      parameters:
        - name: body
          in: body
          description: Config information
          required: true
          schema:
            $ref: "#/definitions/InstanceConfigResponse"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/SuccessResponse"
        "500":
          $ref: "#/responses/Response_500"
        "501":
          $ref: "#/responses/Response_501"
    patch:
      description: Replace the Preferences, Working preset, Presets and Commands of the MainSettings object with the contents of the payload. Presets and Commands if available in the payload are added. Channels in the working preset are added. Devices in the working preset are patched or added (upsert).
      operationId: instanceConfigPatch
      tags:
        - Instance
      consumes:
        - application/json
      parameters:
        - name: body
          in: body
          description: Config information
          required: true
          schema:
            $ref: "#/definitions/InstanceConfigResponse"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/SuccessResponse"
        "500":
          $ref: "#/responses/Response_500"
        "501":
          $ref: "#/responses/Response_501"

  /sdrangel/devices:
    x-swagger-router-controller: instance
    get:
      description: Get a list of sampling devices that can be used to take part in a device set
      operationId: instanceDevices
      tags:
        - Instance
      parameters:
        - name: direction
          in: query
          description: 0 for Rx only, 1 for Tx only or 2 for any number and direction (default 0)
          required: false
          type: integer
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/InstanceDevicesResponse"
        "500":
          $ref: "#/responses/Response_500"
        "501":
          $ref: "#/responses/Response_501"

  /sdrangel/channels:
    x-swagger-router-controller: instance
    get:
      description: Get a list of channel plugins available in this instance
      operationId: instanceChannels
      tags:
        - Instance
      parameters:
        - name: direction
          in: query
          description: 0 for Rx only, 1 for Tx only or 2 for any number and direction (default 0)
          required: false
          type: integer
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/InstanceChannelsResponse"
        "500":
          $ref: "#/responses/Response_500"
        "501":
          $ref: "#/responses/Response_501"

  /sdrangel/logging:
    x-swagger-router-controller: instance
    get:
      description: Get logging information for this instance
      operationId: instanceLoggingGet
      tags:
        - Instance
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/LoggingInfo"
        "500":
          $ref: "#/responses/Response_500"
        "501":
          $ref: "#/responses/Response_501"
    put:
      description: Change logging parmeters for this instance
      operationId: instanceLoggingPut
      tags:
        - Instance
      consumes:
        - application/json
      parameters:
        - name: body
          in: body
          description: Logging information
          required: true
          schema:
            $ref: "#/definitions/LoggingInfo"
      responses:
        "200":
          description: Return new data on success
          schema:
            $ref: "#/definitions/LoggingInfo"
        "400":
          description: Invalid data
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          $ref: "#/responses/Response_500"
        "501":
          $ref: "#/responses/Response_501"

  /sdrangel/audio:
    x-swagger-router-controller: instance
    get:
      description: Get audio devices list available to this instance
      operationId: instanceAudioGet
      tags:
        - Instance
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/AudioDevices"
        "500":
          $ref: "#/responses/Response_500"
        "501":
          $ref: "#/responses/Response_501"

  /sdrangel/audio/input/parameters:
    x-swagger-router-controller: instance
    patch:
      description: Set audio input device paramaters
      operationId: instanceAudioInputPatch
      tags:
        - Instance
      consumes:
        - application/json
      parameters:
        - name: body
          in: body
          description: Audio input parameters. Index is used to identify the device. Only settable fields are considered.
          required: true
          schema:
            $ref: "#/definitions/AudioInputDevice"
      responses:
        "200":
          description: Success. Returns actual data in particular the actual sample rate.
          schema:
            $ref: "#/definitions/AudioInputDevice"
        "404":
          description: Audio input device not found
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          $ref: "#/responses/Response_500"
        "501":
          $ref: "#/responses/Response_501"
    delete:
      description: Delete audio input device paramaters and return to defaults
      operationId: instanceAudioInputDelete
      tags:
        - Instance
      consumes:
        - application/json
      parameters:
        - name: body
          in: body
          description: Audio input parameters. Index is used to identify the device.
          required: true
          schema:
            $ref: "#/definitions/AudioInputDevice"
      responses:
        "200":
          description: Success. Returns default parameters.
          schema:
            $ref: "#/definitions/AudioInputDevice"
        "404":
          description: Audio input device not found
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          $ref: "#/responses/Response_500"
        "501":
          $ref: "#/responses/Response_501"


  /sdrangel/audio/input/cleanup:
    x-swagger-router-controller: instance
    patch:
      description: Remove registered parameters for devices not in  list of available input devices for this instance
      operationId: instanceAudioInputCleanupPatch
      tags:
        - Instance
      responses:
        "200":
          description: Success.
          schema:
            $ref: "#/definitions/SuccessResponse"
        "500":
          $ref: "#/responses/Response_500"
        "501":
          $ref: "#/responses/Response_501"

  /sdrangel/audio/output/parameters:
    x-swagger-router-controller: instance
    patch:
      description: Set audio output device parameters
      operationId: instanceAudioOutputPatch
      tags:
        - Instance
      consumes:
        - application/json
      parameters:
        - name: body
          in: body
          description: Audio output parameters. Index is used to identify the device. Only settable fields are considered.
          required: true
          schema:
            $ref: "#/definitions/AudioOutputDevice"
      responses:
        "200":
          description: Success. Returns actual data in particular the actual sample rate.
          schema:
            $ref: "#/definitions/AudioOutputDevice"
        "404":
          description: Audio output device not found
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          $ref: "#/responses/Response_500"
        "501":
          $ref: "#/responses/Response_501"
    delete:
      description: Delete audio output device paramaters and return to defaults
      operationId: instanceAudioOutputDelete
      tags:
        - Instance
      consumes:
        - application/json
      parameters:
        - name: body
          in: body
          description: Audio output parameters. Index is used to identify the device.
          required: true
          schema:
            $ref: "#/definitions/AudioOutputDevice"
      responses:
        "200":
          description: Success. Returns actual data in particular the actual sample rate.
          schema:
            $ref: "#/definitions/AudioOutputDevice"
        "404":
          description: Audio output device not found
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          $ref: "#/responses/Response_500"
        "501":
          $ref: "#/responses/Response_501"

  /sdrangel/audio/output/cleanup:
    x-swagger-router-controller: instance
    patch:
      description: Remove registered parameters for devices not in  list of available output devices for this instance
      operationId: instanceAudioOutputCleanupPatch
      tags:
        - Instance
      responses:
        "200":
          description: Success.
          schema:
            $ref: "#/definitions/SuccessResponse"
        "500":
          $ref: "#/responses/Response_500"
        "501":
          $ref: "#/responses/Response_501"

  /sdrangel/location:
    x-swagger-router-controller: instance
    get:
      description: Get instance geolocation information
      operationId: instanceLocationGet
      tags:
        - Instance
      responses:
        "200":
          description: On success return location
          schema:
            $ref: "#/definitions/LocationInformation"
        "500":
          $ref: "#/responses/Response_500"
        "501":
          $ref: "#/responses/Response_501"
    put:
      description: Set instance geolocation information
      operationId: instanceLocationPut
      tags:
        - Instance
      consumes:
        - application/json
      parameters:
        - name: body
          in: body
          description: Location of instance in latitude and longitude
          required: true
          schema:
            $ref: "#/definitions/LocationInformation"
      responses:
        "200":
          description: On success return location
          schema:
            $ref: "#/definitions/LocationInformation"
        "400":
          description: Location invalid
        "500":
          $ref: "#/responses/Response_500"
        "501":
          $ref: "#/responses/Response_501"

  /sdrangel/ambe/serial:
    x-swagger-router-controller: instance
    get:
      description: get a list of available DV serial devices
      operationId: instanceAMBESerialGet
      tags:
        - Instance
      responses:
        "200":
          description: On success return list of device paths possibly empty
          schema:
            $ref: "#/definitions/DVSerialDevices"
        "500":
          $ref: "#/responses/Response_500"
        "501":
          $ref: "#/responses/Response_501"

  /sdrangel/ambe/devices:
    x-swagger-router-controller: instance
    get:
      description: get the list of AMBE devices (serial or address) used for AMBE frames decoding in digital voice modes
      operationId: InstanceAMBEDevicesGet
      tags:
        - Instance
      responses:
        "200":
          description: On success return list of devices possibly empty
          schema:
            $ref: "#/definitions/AMBEDevices"
        "500":
          $ref: "#/responses/Response_500"
        "501":
          $ref: "#/responses/Response_501"
    put:
      description: Replace the list of active devices
      operationId: InstanceAMBEDevicesPut
      tags:
        - Instance
      consumes:
        - application/json
      parameters:
        - name: body
          in: body
          description: List of AMBE devices (serial or address)
          required: true
          schema:
            $ref: "#/definitions/AMBEDevices"
      responses:
        "200":
          description: On success return list of devices
          schema:
            $ref: "#/definitions/AMBEDevices"
        "500":
          $ref: "#/responses/Response_500"
        "501":
          $ref: "#/responses/Response_501"
    delete:
      description: Emtpy the active devices thus effectively closing down AMBE devices support
      operationId: InstanceAMBEDevicesDelete
      tags:
        - Instance
      responses:
        "200":
          description: Success.
          schema:
            $ref: "#/definitions/SuccessResponse"
        "500":
          $ref: "#/responses/Response_500"
        "501":
          $ref: "#/responses/Response_501"
    patch:
      description: Add and/or delete devices to/from the active list
      operationId: InstanceAMBEDevicesPatch
      tags:
        - Instance
      consumes:
        - application/json
      parameters:
        - name: body
          in: body
          description: List of AMBE devices (serial or address)
          required: true
          schema:
            $ref: "#/definitions/AMBEDevices"
      responses:
        "200":
          description: On success return list of devices
          schema:
            $ref: "#/definitions/AMBEDevices"
        "500":
          $ref: "#/responses/Response_500"
        "501":
          $ref: "#/responses/Response_501"

  /sdrangel/limerfe/serial:
    x-swagger-router-controller: instance
    get:
      description: get a list of available serial interfaces to LimeRFE device
      operationId: instanceLimeRFESerialGet
      tags:
        - Instance
      responses:
        "200":
          description: On success return list of device paths possibly empty
          schema:
            $ref: "#/definitions/LimeRFEDevices"
        "500":
          $ref: "#/responses/Response_500"
        "501":
          $ref: "#/responses/Response_501"

  /sdrangel/limerfe/config:
    x-swagger-router-controller: instance
    get:
      description: get LimeRFE configuration
      operationId: instanceLimeRFEConfigGet
      tags:
        - Instance
      parameters:
        - name: serial
          in: query
          description: device serial path
          required: true
          type: string
      responses:
        "200":
          description: On success return configuration information for the given device in input
          schema:
            $ref: "http://localhost:8081/api/swagger/include/LimeRFE.yaml#/LimeRFESettings"
        "500":
          $ref: "#/responses/Response_500"
        "501":
          $ref: "#/responses/Response_501"
    put:
      description: replace LimeRFE configuration
      operationId: instanceLimeRFEConfigPut
      tags:
        - Instance
      consumes:
        - application/json
      parameters:
        - name: body
          in: body
          description: Give device serial path in devicePath field. To switch Rx and/or Tx on or off use the run API.
          required: true
          schema:
            $ref: "http://localhost:8081/api/swagger/include/LimeRFE.yaml#/LimeRFESettings"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/SuccessResponse"
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          $ref: "#/responses/Response_500"
        "501":
          $ref: "#/responses/Response_501"

  /sdrangel/limerfe/run:
    x-swagger-router-controller: instance
    put:
      description: set Rx and Tx on or off
      operationId: instanceLimeRFERunPut
      tags:
        - Instance
      parameters:
        - name: body
          in: body
          description: Give device serial path in devicePath field and run status in rxOn and txOn
          required: true
          schema:
            $ref: "http://localhost:8081/api/swagger/include/LimeRFE.yaml#/LimeRFESettings"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/SuccessResponse"
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          $ref: "#/responses/Response_500"
        "501":
          $ref: "#/responses/Response_501"

  /sdrangel/limerfe/power:
    x-swagger-router-controller: instance
    get:
      description: get forward and reflected relative powers in centi-Bels
      operationId: instanceLimeRFEPowerGet
      tags:
        - Instance
      parameters:
        - name: serial
          in: query
          description: device serial path
          required: true
          type: string
      responses:
        "200":
          description: On success return forward and reflected powers in centi-Bels
          schema:
            $ref: "http://localhost:8081/api/swagger/include/LimeRFE.yaml#/LimeRFEPower"
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          $ref: "#/responses/Response_500"
        "501":
          $ref: "#/responses/Response_501"

  /sdrangel/presets:
    x-swagger-router-controller: instance
    get:
      description: List all presets in the instance
      operationId: instancePresetGet
      tags:
        - Instance
      responses:
        "200":
          description: On success return preset list
          schema:
            $ref: "#/definitions/Presets"
        "500":
          $ref: "#/responses/Response_500"
        "501":
          $ref: "#/responses/Response_501"

  /sdrangel/preset:
    x-swagger-router-controller: instance
    patch:
      description: Load a preset in a device set
      operationId: instancePresetPatch
      tags:
        - Instance
      consumes:
        - application/json
      parameters:
        - name: body
          in: body
          description: Load preset settings to the device set
          required: true
          schema:
            $ref: "#/definitions/PresetTransfer"
      responses:
        "202":
          description: On successful sending of the message the selected preset identification is returned
          schema:
            $ref: "#/definitions/PresetIdentifier"
        "400":
          description: Invalid JSON request or preset type and device set type mismatch
          schema:
            $ref: "#/definitions/ErrorResponse"
        "404":
          description: No preset or device set found
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          $ref: "#/responses/Response_500"
        "501":
          $ref: "#/responses/Response_501"
    put:
      description: Update an existing preset with device set settings.
      operationId: instancePresetPut
      tags:
        - Instance
      consumes:
        - application/json
      parameters:
        - name: body
          in: body
          description: save device set settings to the preset
          required: true
          schema:
            $ref: "#/definitions/PresetTransfer"
      responses:
        "202":
          description: On successful sending of the message the selected preset identification is returned
          schema:
            $ref: "#/definitions/PresetIdentifier"
        "400":
          description: Invalid JSON request
          schema:
            $ref: "#/definitions/ErrorResponse"
        "404":
          description: No preset or device set found
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          $ref: "#/responses/Response_500"
        "501":
          $ref: "#/responses/Response_501"
    post:
      description: Create a new preset from a device set settings. Frequency and type is ignored and taken from the the device set values.
      operationId: instancePresetPost
      tags:
        - Instance
      consumes:
        - application/json
      parameters:
        - name: body
          in: body
          description: save device set settings on a new preset
          required: true
          schema:
            $ref: "#/definitions/PresetTransfer"
      responses:
        "202":
          description: On successful sending of the message the created preset identification is returned
          schema:
            $ref: "#/definitions/PresetIdentifier"
        "400":
          description: Invalid JSON request
          schema:
            $ref: "#/definitions/ErrorResponse"
        "404":
          description: Device set not found
          schema:
            $ref: "#/definitions/ErrorResponse"
        "409":
          description: Preset already exists
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          $ref: "#/responses/Response_500"
        "501":
          $ref: "#/responses/Response_501"
    delete:
      description: Deletes a preset
      operationId: instancePresetDelete
      tags:
        - Instance
      consumes:
        - application/json
      parameters:
        - name: body
          in: body
          description: delete this preset
          required: true
          schema:
            $ref: "#/definitions/PresetIdentifier"
      responses:
        "202":
          description: On successful sending of the message the selected preset identification is returned
          schema:
            $ref: "#/definitions/PresetIdentifier"
        "400":
          description: Invalid JSON request
          schema:
            $ref: "#/definitions/ErrorResponse"
        "404":
          description: Preset not found
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          $ref: "#/responses/Response_500"
        "501":
          $ref: "#/responses/Response_501"

  /sdrangel/preset/file:
    x-swagger-router-controller: instance
    put:
      description: import a preset from file as a new preset (server only).
      operationId: instancePresetFilePut
      tags:
        - Instance
      consumes:
        - application/json
      parameters:
        - name: body
          in: body
          description: import details
          required: true
          schema:
            $ref: "#/definitions/PresetImport"
      responses:
        "200":
          description: On success return preset identification
          schema:
            $ref: "#/definitions/PresetIdentifier"
        "400":
          description: Invalid JSON request
          schema:
            $ref: "#/definitions/ErrorResponse"
        "404":
          description: File not found
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          $ref: "#/responses/Response_500"
        "501":
          $ref: "#/responses/Response_501"
    post:
      description: export a preset to file (server only).
      operationId: instancePresetFilePost
      tags:
        - Instance
      consumes:
        - application/json
      parameters:
        - name: body
          in: body
          description: export details
          required: true
          schema:
            $ref: "#/definitions/PresetExport"
      responses:
        "200":
          description: On success return preset identification
          schema:
            $ref: "#/definitions/PresetIdentifier"
        "400":
          description: Invalid JSON request
          schema:
            $ref: "#/definitions/ErrorResponse"
        "404":
          description: Preset or file path not found
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          $ref: "#/responses/Response_500"
        "501":
          $ref: "#/responses/Response_501"

  /sdrangel/devicesets:
    x-swagger-router-controller: instance
    get:
      description: Get summary information about device sets opened in the instance
      operationId: instanceDeviceSetsGet
      tags:
        - Instance
      responses:
        "200":
          description: On success return device set list
          schema:
            $ref: "#/definitions/DeviceSetList"
        "500":
          $ref: "#/responses/Response_500"
        "501":
          $ref: "#/responses/Response_501"

  /sdrangel/deviceset:
    x-swagger-router-controller: instance
    post:
      description: Add (append) a new device set with default values
      operationId: instanceDeviceSetPost
      tags:
        - DeviceSet
      parameters:
        - name: direction
          in: query
          description: 0 for Rx only, 1 for Tx only or 2 for any number and direction (default 0)
          required: false
          type: integer
      responses:
        "202":
          description: Message to add a new device set was sent successfully
          schema:
            $ref: "#/definitions/SuccessResponse"
        "500":
          $ref: "#/responses/Response_500"
        "501":
          $ref: "#/responses/Response_501"
    delete:
      description: Remove last device set. The GUI version does not remove the  first device.
      operationId: instanceDeviceSetDelete
      tags:
        - DeviceSet
      responses:
        "202":
          description: Message to remove last device set was sent successfully
          schema:
            $ref: "#/definitions/SuccessResponse"
        "404":
          description: "No more device sets to be deleted"
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          $ref: "#/responses/Response_500"
        "501":
          $ref: "#/responses/Response_501"

  /sdrangel/deviceset/{deviceSetIndex}:
    x-swagger-router-controller: deviceset
    get:
      description: Get device set information
      operationId: devicesetGet
      tags:
        - DeviceSet
      parameters:
        - in: path
          name: deviceSetIndex
          type: integer
          required: true
          description: Index of device set in the device set list
      responses:
        "200":
          description: On success return details on the device set
          schema:
            $ref: "#/definitions/DeviceSet"
        "404":
          description: Invalid index
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          $ref: "#/responses/Response_500"
        "501":
          $ref: "#/responses/Response_501"

  /sdrangel/deviceset/{deviceSetIndex}/focus:
    x-swagger-router-controller: deviceset
    patch:
      description: Set focus on device set (GUI only)
      operationId: devicesetFocusPatch
      tags:
        - DeviceSet
      parameters:
        - in: path
          name: deviceSetIndex
          type: integer
          required: true
          description: Index of device set in the device set list
      responses:
        "202":
          description: Message to focus on device set was sent successfully
          schema:
            $ref: "#/definitions/SuccessResponse"
        "400":
          description: Unsupported (srver instance)
          schema:
            $ref: "#/definitions/ErrorResponse"
        "404":
          description: Invalid index
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          $ref: "#/responses/Response_500"
        "501":
          $ref: "#/responses/Response_501"

  /sdrangel/deviceset/{deviceSetIndex}/device:
    x-swagger-router-controller: deviceset
    put:
      description: Set the device used in the device set
      operationId: devicesetDevicePut
      tags:
        - DeviceSet
      parameters:
        - in: path
          name: deviceSetIndex
          type: integer
          required: true
          description: Index of device set in the device set list
        - name: body
          in: body
          description: Device item to look for. Specify only the fields you want to search for. You must at least specify one among displayedName, hwType or serial. index and deviceŃbStreams are ignored. Rx is assumed by default.
          required: true
          schema:
            $ref: "#/definitions/DeviceListItem"
      responses:
        "202":
          description: On successful semdomg of the message it returns the details of the device being set
          schema:
            $ref: "#/definitions/DeviceListItem"
        "400":
          description: Device set and device type mismatch (Rx vs Tx)
          schema:
            $ref: "#/definitions/ErrorResponse"
        "404":
          description: Invalid device set index or device not found
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          $ref: "#/responses/Response_500"
        "501":
          $ref: "#/responses/Response_501"

  /sdrangel/deviceset/{deviceSetIndex}/device/settings:
    x-swagger-router-controller: deviceset
    get:
      description: Get device settings
      operationId: devicesetDeviceSettingsGet
      tags:
        - DeviceSet
      parameters:
        - in: path
          name: deviceSetIndex
          type: integer
          required: true
          description: Index of device set in the device set list
      responses:
        "200":
          description: On success returns current settings values
          schema:
            $ref: "http://localhost:8081/api/swagger/include/DeviceSettings.yaml#/DeviceSettings"
        "404":
          description: Invalid device set index or device not found
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          $ref: "#/responses/Response_500"
        "501":
          $ref: "#/responses/Response_501"
    put:
      description: Apply all settings unconditionally (force)
      operationId: devicesetDeviceSettingsPut
      tags:
        - DeviceSet
      parameters:
        - in: path
          name: deviceSetIndex
          type: integer
          required: true
          description: Index of device set in the device set list
        - name: body
          in: body
          description: Device settings to apply
          required: true
          schema:
            $ref: "http://localhost:8081/api/swagger/include/DeviceSettings.yaml#/DeviceSettings"
      responses:
        "200":
          description: On success returns new settings values
          schema:
            $ref: "http://localhost:8081/api/swagger/include/DeviceSettings.yaml#/DeviceSettings"
        "404":
          description: Invalid device set index or device not found
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          $ref: "#/responses/Response_500"
        "501":
          $ref: "#/responses/Response_501"
    patch:
      description: Apply settings differentially (no force)
      operationId: devicesetDeviceSettingsPatch
      tags:
        - DeviceSet
      parameters:
        - in: path
          name: deviceSetIndex
          type: integer
          required: true
          description: Index of device set in the device set list
        - name: body
          in: body
          description: Device settings to apply
          required: true
          schema:
            $ref: "http://localhost:8081/api/swagger/include/DeviceSettings.yaml#/DeviceSettings"
      responses:
        "200":
          description: On success returns new settings values
          schema:
            $ref: "http://localhost:8081/api/swagger/include/DeviceSettings.yaml#/DeviceSettings"
        "404":
          description: Invalid device set index or device not found
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          $ref: "#/responses/Response_500"
        "501":
          $ref: "#/responses/Response_501"

  /sdrangel/deviceset/{deviceSetIndex}/device/run:
    x-swagger-router-controller: deviceset
    get:
      description: get device run status for a single subsystem device (Rx or Tx)
      operationId: devicesetDeviceRunGet
      tags:
        - DeviceSet
      parameters:
        - in: path
          name: deviceSetIndex
          type: integer
          required: true
          description: Index of device set in the device set list
      responses:
        "200":
          description: On success return current state
          schema:
            $ref: "#/definitions/DeviceState"
        "400":
          description: Invalid device set index
          schema:
            $ref: "#/definitions/ErrorResponse"
        "404":
          description: Device not found
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          $ref: "#/responses/Response_500"
        "501":
          $ref: "#/responses/Response_501"
    post:
      description: start device for a single subsystem device (Rx or Tx)
      operationId: devicesetDeviceRunPost
      tags:
        - DeviceSet
      parameters:
        - in: path
          name: deviceSetIndex
          type: integer
          required: true
          description: Index of device set in the device set list
        - name: body
          in: body
          description: Originator information in the reverse API case
          required: false
          schema:
            $ref: "http://localhost:8081/api/swagger/include/DeviceSettings.yaml#/DeviceSettings"
      responses:
        "200":
          description: On success return state before change
          schema:
            $ref: "#/definitions/DeviceState"
        "400":
          description: Invalid device set index
          schema:
            $ref: "#/definitions/ErrorResponse"
        "404":
          description: Device not found
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          $ref: "#/responses/Response_500"
        "501":
          $ref: "#/responses/Response_501"
    delete:
      description: stop device for a single subsystem device (Rx or Tx)
      operationId: devicesetDeviceRunDelete
      tags:
        - DeviceSet
      parameters:
        - in: path
          name: deviceSetIndex
          type: integer
          required: true
          description: Index of device set in the device set list
        - name: body
          in: body
          description: Originator information in the reverse API case
          required: false
          schema:
            $ref: "http://localhost:8081/api/swagger/include/DeviceSettings.yaml#/DeviceSettings"
      responses:
        "200":
          description: On success return state before change
          schema:
            $ref: "#/definitions/DeviceState"
        "400":
          description: Invalid device set index
          schema:
            $ref: "#/definitions/ErrorResponse"
        "404":
          description: Device not found
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          $ref: "#/responses/Response_500"
        "501":
          $ref: "#/responses/Response_501"

  /sdrangel/deviceset/{deviceSetIndex}/subdevice/{subsystemIndex}/run:
    x-swagger-router-controller: deviceset
    get:
      description: get device run status for a multi-subsystem device (Rx/Tx combination i.e. MIMO)
      operationId: devicesetDeviceSubsystemRunGet
      tags:
        - DeviceSet
      parameters:
        - in: path
          name: deviceSetIndex
          type: integer
          required: true
          description: Index of device set in the device set list
        - in: path
          name: subsystemIndex
          type: integer
          required: true
          description: Index of subsystem (0 for Rx, 1 for Tx)
      responses:
        "200":
          description: On success return current state
          schema:
            $ref: "#/definitions/DeviceState"
        "400":
          description: Invalid device set index
          schema:
            $ref: "#/definitions/ErrorResponse"
        "404":
          description: Device or subsystem not found
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          $ref: "#/responses/Response_500"
        "501":
          $ref: "#/responses/Response_501"
    post:
      description: start device for a multi-subsystem device (Rx/Tx combination i.e. MIMO)
      operationId: devicesetDeviceSubsystemRunPost
      tags:
        - DeviceSet
      parameters:
        - in: path
          name: deviceSetIndex
          type: integer
          required: true
          description: Index of device set in the device set list
        - in: path
          name: subsystemIndex
          type: integer
          required: true
          description: Index of subsystem (0 for Rx, 1 for Tx)
        - name: body
          in: body
          description: Originator information in the reverse API case
          required: false
          schema:
            $ref: "http://localhost:8081/api/swagger/include/DeviceSettings.yaml#/DeviceSettings"
      responses:
        "200":
          description: On success return state before change
          schema:
            $ref: "#/definitions/DeviceState"
        "400":
          description: Invalid device set index
          schema:
            $ref: "#/definitions/ErrorResponse"
        "404":
          description: Device or subsystem not found
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          $ref: "#/responses/Response_500"
        "501":
          $ref: "#/responses/Response_501"
    delete:
      description: stop device for a multi-subsystem device (Rx/Tx combination i.e. MIMO)
      operationId: devicesetDeviceSubsystemRunDelete
      tags:
        - DeviceSet
      parameters:
        - in: path
          name: deviceSetIndex
          type: integer
          required: true
          description: Index of device set in the device set list
        - in: path
          name: subsystemIndex
          type: integer
          required: true
          description: Index of subsystem (0 for Rx, 1 for Tx)
        - name: body
          in: body
          description: Originator information in the reverse API case
          required: false
          schema:
            $ref: "http://localhost:8081/api/swagger/include/DeviceSettings.yaml#/DeviceSettings"
      responses:
        "200":
          description: On success return state before change
          schema:
            $ref: "#/definitions/DeviceState"
        "400":
          description: Invalid device set index
          schema:
            $ref: "#/definitions/ErrorResponse"
        "404":
          description: Device or subsystem not found
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          $ref: "#/responses/Response_500"
        "501":
          $ref: "#/responses/Response_501"

  /sdrangel/deviceset/{deviceSetIndex}/device/report:
    x-swagger-router-controller: deviceset
    get:
      description: get the device report
      operationId: devicesetDeviceReportGet
      tags:
        - DeviceSet
      parameters:
        - in: path
          name: deviceSetIndex
          type: integer
          required: true
          description: Index of device set in the device set list
      responses:
        "200":
          description: On success return device report
          schema:
            $ref: "#/definitions/DeviceReport"
        "400":
          description: Invalid device set
          schema:
            $ref: "#/definitions/ErrorResponse"
        "404":
          description: Device not found
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          $ref: "#/responses/Response_500"
        "501":
          $ref: "#/responses/Response_501"


  /sdrangel/deviceset/{deviceSetIndex}/channels/report:
    x-swagger-router-controller: deviceset
    get:
      description: get channels report
      operationId: devicesetChannelsReportGet
      tags:
        - DeviceSet
      parameters:
        - in: path
          name: deviceSetIndex
          type: integer
          required: true
          description: Index of device set in the device set list
      responses:
        "200":
          description: On success return channels report information
          schema:
            $ref: "#/definitions/ChannelsDetail"
        "400":
          description: Invalid device set index
          schema:
            $ref: "#/definitions/ErrorResponse"
        "404":
          description: Device not found
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          $ref: "#/responses/Response_500"
        "501":
          $ref: "#/responses/Response_501"

  /sdrangel/deviceset/{deviceSetIndex}/device/actions:
    x-swagger-router-controller: deviceset
    post:
      description: post an action on a device
      operationId: devicesetDeviceActionsPost
      tags:
        - DeviceSet
      parameters:
        - in: path
          name: deviceSetIndex
          type: integer
          required: true
          description: Index of device set in the device set list
        - name: body
          in: body
          description: Action(s) to apply to the device
          required: true
          schema:
            $ref: "http://localhost:8081/api/swagger/include/DeviceActions.yaml#/DeviceActions"
      responses:
        "202":
          description: Message to perform action was sent successfully
          schema:
            $ref: "#/definitions/SuccessResponse"
        "400":
          description: Invalid device set index
          schema:
            $ref: "#/definitions/ErrorResponse"
        "404":
          description: Device not found
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          $ref: "#/responses/Response_500"
        "501":
          $ref: "#/responses/Response_501"

  /sdrangel/deviceset/{deviceSetIndex}/channel:
    x-swagger-router-controller: deviceset
    post:
      description: add a channel
      operationId: devicesetChannelPost
      tags:
        - DeviceSet
      parameters:
        - in: path
          name: deviceSetIndex
          type: integer
          required: true
          description: Index of device set in the device set list
        - name: body
          in: body
          description: Channel identification (no settings data)
          required: true
          schema:
            $ref: "http://localhost:8081/api/swagger/include/ChannelSettings.yaml#/ChannelSettings"
      responses:
        "202":
          description: Message to add a channel was sent successfully
          schema:
            $ref: "#/definitions/SuccessResponse"
        "400":
          description: Invalid device set index
          schema:
            $ref: "#/definitions/ErrorResponse"
        "404":
          description: Device not found
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          $ref: "#/responses/Response_500"
        "501":
          $ref: "#/responses/Response_501"

  /sdrangel/deviceset/{deviceSetIndex}/channel/{channelIndex}:
    delete:
      description: delete channel (server only)
      operationId: devicesetChannelDelete
      tags:
        - DeviceSet
      parameters:
        - in: path
          name: deviceSetIndex
          type: integer
          required: true
          description: Index of device set in the device set list
        - in: path
          name: channelIndex
          type: integer
          required: true
          description: Index of channel in the channels list
      responses:
        "200":
          description: On success return deleted channel settings
          schema:
            $ref: "http://localhost:8081/api/swagger/include/ChannelSettings.yaml#/ChannelSettings"
        "400":
          description: Invalid device set or channel index
          schema:
            $ref: "#/definitions/ErrorResponse"
        "404":
          description: Device or channel not found
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          $ref: "#/responses/Response_500"
        "501":
          $ref: "#/responses/Response_501"

  /sdrangel/deviceset/{deviceSetIndex}/channel/{channelIndex}/settings:
    x-swagger-router-controller: deviceset
    get:
      description: get a channel settings
      operationId: devicesetChannelSettingsGet
      tags:
        - DeviceSet
      parameters:
        - in: path
          name: deviceSetIndex
          type: integer
          required: true
          description: Index of device set in the device set list
        - in: path
          name: channelIndex
          type: integer
          required: true
          description: Index of the channel in the channels list for this device set
      responses:
        "200":
          description: On success return channel settings
          schema:
            $ref: "http://localhost:8081/api/swagger/include/ChannelSettings.yaml#/ChannelSettings"
        "400":
          description: Invalid device set or channel index
          schema:
            $ref: "#/definitions/ErrorResponse"
        "404":
          description: Device or channel not found
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          $ref: "#/responses/Response_500"
        "501":
          $ref: "#/responses/Response_501"
    put:
      description: apply all settings unconditionally (force)
      operationId: devicesetChannelSettingsPut
      tags:
        - DeviceSet
      parameters:
        - in: path
          name: deviceSetIndex
          type: integer
          required: true
          description: Index of device set in the device set list
        - in: path
          name: channelIndex
          type: integer
          required: true
          description: Index of the channel in the channels list for this device set
        - name: body
          in: body
          description: Channel settings to apply
          required: true
          schema:
            $ref: "http://localhost:8081/api/swagger/include/ChannelSettings.yaml#/ChannelSettings"
      responses:
        "200":
          description: On success return channel new settings
          schema:
            $ref: "http://localhost:8081/api/swagger/include/ChannelSettings.yaml#/ChannelSettings"
        "400":
          description: Invalid device set or channel index
          schema:
            $ref: "#/definitions/ErrorResponse"
        "404":
          description: Device or channel not found
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          $ref: "#/responses/Response_500"
        "501":
          $ref: "#/responses/Response_501"
    patch:
      description: apply settings differentially (no force)
      operationId: devicesetChannelSettingsPatch
      tags:
        - DeviceSet
      parameters:
        - in: path
          name: deviceSetIndex
          type: integer
          required: true
          description: Index of device set in the device set list
        - in: path
          name: channelIndex
          type: integer
          required: true
          description: Index of the channel in the channels list for this device set
        - name: body
          in: body
          description: Channel settings to apply
          required: true
          schema:
            $ref: "http://localhost:8081/api/swagger/include/ChannelSettings.yaml#/ChannelSettings"
      responses:
        "200":
          description: On success return channel new settings
          schema:
            $ref: "http://localhost:8081/api/swagger/include/ChannelSettings.yaml#/ChannelSettings"
        "400":
          description: Invalid device set or channel index
          schema:
            $ref: "#/definitions/ErrorResponse"
        "404":
          description: Device or channel not found
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          $ref: "#/responses/Response_500"
        "501":
          $ref: "#/responses/Response_501"

  /sdrangel/deviceset/{deviceSetIndex}/channel/{channelIndex}/report:
    x-swagger-router-controller: deviceset
    get:
      description: get a channel report
      operationId: devicesetChannelReportGet
      tags:
        - DeviceSet
      parameters:
        - in: path
          name: deviceSetIndex
          type: integer
          required: true
          description: Index of device set in the device set list
        - in: path
          name: channelIndex
          type: integer
          required: true
          description: Index of the channel in the channels list for this device set
      responses:
        "200":
          description: On success return channel report
          schema:
            $ref: "#/definitions/ChannelReport"
        "400":
          description: Invalid device set or channel index
          schema:
            $ref: "#/definitions/ErrorResponse"
        "404":
          description: Device or channel not found
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          $ref: "#/responses/Response_500"
        "501":
          $ref: "#/responses/Response_501"

  /sdrangel/deviceset/{deviceSetIndex}/channel/{channelIndex}/actions:
    x-swagger-router-controller: deviceset
    post:
      description: post an action or actions on a channel
      operationId: devicesetChannelActionsPost
      tags:
        - DeviceSet
      parameters:
        - in: path
          name: deviceSetIndex
          type: integer
          required: true
          description: Index of device set in the device set list
        - in: path
          name: channelIndex
          type: integer
          required: true
          description: Index of the channel in the channels list for this device set
        - name: body
          in: body
          description: Action(s) to apply to the channel
          required: true
          schema:
            $ref: "http://localhost:8081/api/swagger/include/ChannelActions.yaml#/ChannelActions"
      responses:
        "202":
          description: Message to perform action was sent successfully
          schema:
            $ref: "#/definitions/SuccessResponse"
        "400":
          description: Invalid device set or channel index
          schema:
            $ref: "#/definitions/ErrorResponse"
        "404":
          description: Device or channel not found
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          $ref: "#/responses/Response_500"
        "501":
          $ref: "#/responses/Response_501"

  /swagger:
    x-swagger-pipe: swagger_raw

# complex objects have schema definitions
definitions:

  InstanceSummaryResponse:
    description: "Summarized information about this SDRangel instance"
    required:
      - version
      - qtVersion
      - dspRxBits
      - dspTxBits
      - pid
      - appname
      - devicesetlist
      - architecture
      - os
    properties:
      version:
        description: "Current software version"
        type: string
      qtVersion:
        description: "Qt version with which the software was compiled"
        type: string
      dspRxBits:
        description: "Number of samples significant bits in software Rx DSP"
        type: integer
      dspTxBits:
        description: "Number of samples significant bits in software Tx DSP"
        type: integer
      pid:
        description: "PID of the SDRangel instance"
        type: integer
      appname:
        description: "Application name: SDRangel for a GUI instance and SDRangelSrv for a server instance"
        type: string
      architecture:
        description: "Codename of the CPU architecture on which the instance is running (available with Qt >= 5.4)"
        type: string
      os:
        description: "Descriptive text of the operating system running the instance (available with Qt >= 5.4)"
        type: string
      logging:
        $ref: "#/definitions/LoggingInfo"
      devicesetlist:
        $ref: "#/definitions/DeviceSetList"

  InstanceConfigResponse:
    description: Preferences, Presets and Commands of the MainSettings saved by Qt
    properties:
      preferences:
        $ref: "http://localhost:8081/api/swagger/include/Preferences.yaml#/Preferences"
      workingPreset:
        $ref: "http://localhost:8081/api/swagger/include/Preset.yaml#/Preset"
      presets:
        type: array
        items:
          $ref: "http://localhost:8081/api/swagger/include/Preset.yaml#/Preset"
      commands:
        type: array
        items:
          $ref: "http://localhost:8081/api/swagger/include/Command.yaml#/Command"

  InstanceDevicesResponse:
    description: "Summarized information about logical devices from hardware devices attached to this SDRangel instance"
    required:
      - devicecount
    properties:
      devicecount:
        description: "Number of devices attached"
        type: integer
      devices:
        type: array
        items:
          $ref: "#/definitions/DeviceListItem"

  InstanceChannelsResponse:
    description: "Summarized information about channel plugins available in this SDRangel instance"
    required:
      - channelcount
    properties:
      channelcount:
        description: "Number of plugins available"
        type: integer
      channels:
        type: array
        items:
          $ref: "#/definitions/ChannelListItem"

  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
        example: "KO"

  SuccessResponse:
    required:
      - message
    properties:
      message:
        type: string

  LoggingInfo:
    description: "Logging parameters setting"
    properties:
      consoleLevel:
        description: "Minimum level of messages printed to console: debug, info, warning, error"
        type: string
      fileLevel:
        description: "Minimum level of messages written to file: debug, info, warning, error"
        type: string
      dumpToFile:
        description: "not zero (true) if messages are written to file"
        type: integer
      fileName:
        description: "Name of the log file"
        type: string

  DeviceListItem:
    description: "Summarized information about attached hardware device"
    properties:
      displayedName:
        description: "Displayable name that uniquely identifies this device instance"
        type: string
      hwType:
        description: "Key to identify the type of hardware device"
        type: string
      serial:
        description: "Serial number of the hardware device"
        type: string
      sequence:
        description: "Sequence in the enumeration of same device types"
        type: integer
      direction:
        description: "0 for Rx only, 1 for Tx only or 2 for any number and direction (default 0)"
        type: integer
      deviceNbStreams:
        description: "Number of channels or streams in the device"
        type: integer
      deviceStreamIndex:
        description: "Index of the channel in the device. Applies to single stream directions (Rx or Tx)"
        type: integer
      deviceSetIndex:
        description: "Index of the device set that claimed this device (-1 if not claimed)"
        type: integer
      index:
        description: "Index of the device in the list of registered devices"
        type: integer

  ChannelListItem:
    description: "Summarized information about channel plugin"
    required:
      - id
    properties:
      name:
        description: "Displayable name of the channel plugin"
        type: string
      idURI:
        description: "Key to identify the channel plugin type in URI form"
        type: string
      id:
        description: "Key to identify the channel plugin type as short object name"
        type: string
      direction:
        description: "0 for Rx only, 1 for Tx only or 2 for any number and direction (default 0)"
        type: integer
      version:
        description: "Channel plugin version number"
        type: string
      index:
        description: "Index of the channel in the list of registered channels"
        type: integer

  DeviceSet:
    description: "Sampling device and its associated channels"
    required:
      - samplingDevice
      - channelcount
    properties:
      samplingDevice:
        $ref: "#/definitions/SamplingDevice"
      channelcount:
        description: "Number of channels in the set"
        type: integer
      channels:
        description: "Channels list"
        type: array
        items:
          $ref:  "#/definitions/Channel"
  DeviceSetList:
    description: "List of device sets opened in this instance"
    required:
      - devicesetcount
    properties:
      devicesetcount:
        description: "Number of device sets opened in this instance"
        type: integer
      devicesetfocus:
        description: "Index of the deviceset that has focus (relevant for GUI only)"
        type: integer
      deviceSets:
        type: array
        items:
          $ref: "#/definitions/DeviceSet"

  DeviceState:
    description: "Device running state"
    properties:
      state:
        description: "Unique state: notStarted, idle, ready, running, error"
        type: string

  SamplingDevice:
    description: "Information about a logical device available from an attached hardware device that can be used as a sampling device"
    required:
      - index
      - hwType
      - streamIndex
      - sequence
      - serial
      - centerFrequency
      - bandwidth
    properties:
      index:
        description: "Index in the list of device sets opened in this instance"
        type: integer
      hwType:
        description: "Key to identify the type of hardware device"
        type: string
      direction:
        description: "0 for Rx only, 1 for Tx only or 2 for any number and direction (default 0)"
        type: integer
      deviceNbStreams:
        description: "Number of channels or streams in the device"
        type: integer
      deviceStreamIndex:
        description: "Index of the channel in the device. Applies to single stream directions (Rx or Tx)"
        type: integer
      sequence:
        description: "Sequence in the enumeration of same device types"
        type: integer
      serial:
        description: "Serial number of the hardware device"
        type: string
      centerFrequency:
        description: "Center frequency in Hz at which the device is tuned possibly taking NCO into account"
        type: integer
        format: int64
      bandwidth:
        description: "Bandwidth in Hz or complex S/s of baseband"
        type: integer
      state:
        description: "Single subsystem state: notStarted, idle, ready, running, error"
        type: string
      stateRx:
        description: "Rx subsystem state (MIMO): notStarted, idle, ready, running, error"
        type: string
      stateTx:
        description: "Tx subsystem state (MIMO): notStarted, idle, ready, running, error"
        type: string

  Channel:
    description: "Channel summarized information"
    required:
      - index
      - id
      - uid
      - title
      - deltaFrequency
    properties:
      direction:
        description: 0 for Rx only, 1 for Tx only or 2 for any direction (MIMO)
        type: integer
      index:
        description: "Index in the list of channels"
        type: integer
      id:
        description: "Key to identify the type of channel"
        type: string
      uid:
        description: "Channel instance unique id"
        type: integer
        format: int64
      title:
        description: "Freeform title of the channel"
        type: string
      deltaFrequency:
        description: "Channel shift frequency in Hz from the center of baseband"
        type: integer
      report:
        $ref: "#/definitions/ChannelReport"

  ChannelsDetail:
    description: "All channels detailed information"
    required:
      - channelcount
    properties:
      channelcount:
        description: "Number of channels in the set"
        type: integer
      channels:
        description: "Channels list"
        type: array
        items:
          $ref:  "#/definitions/Channel"


  AudioDevices:
    description: "List of audio devices available in the system"
    required:
      - nbInputDevices
      - nbOutputDevices
    properties:
      nbInputDevices:
        description: "Number of input audio devices"
        type: integer
      inputDevices:
        description: "List of input devices"
        type: array
        items:
          $ref: "#/definitions/AudioInputDevice"
      nbOutputDevices:
        description: "Number of output audio devices"
        type: integer
      outputDevices:
        description: "List of output devices"
        type: array
        items:
          $ref: "#/definitions/AudioOutputDevice"

  AudioInputDevice:
    description: "Audio input device"
    properties:
      name:
        description: "Displayable name of the device"
        type: string
      index:
        description: "Index in attached devices list. -1 for system default"
        type: integer
      sampleRate:
        description: "Device sample rate in S/s"
        type: integer
      isSystemDefault:
        description: "1 if this device is the system default else 0"
        type: integer
      defaultUnregistered:
        description: "1 if this device is unregistered and therefore will inherit default values else 0"
        type: integer
      volume:
        description: "Audio input volume [0.0..1.0]"
        type: number
        format: float

  AudioOutputDevice:
    description: "Audio output device"
    properties:
      name:
        description: "Displayable name of the device"
        type: string
      index:
        description: "Index in attached devices list. -1 for system default"
        type: integer
      sampleRate:
        description: "Device sample rate in S/s"
        type: integer
      isSystemDefault:
        description: "1 if this device is the system default else 0"
        type: integer
      defaultUnregistered:
        description: "1 if this device is unregistered and therefore will inherit default values else 0"
        type: integer
      copyToUDP:
        description: '1 if audio is copied to UDP else 0'
        type: integer
      udpUsesRTP:
        description: '1 if RTP protocol is used over UDP else 0'
        type: integer
      udpChannelMode:
        description: 'How audio data is copied to UDP: 0: left 1: right 2: mixed 3: stereo (AudioOutput::UDPChannelMode)'
        type: integer
      udpChannelCodec:
        description: 'Index of codec used in UDP/RTP transmission. See AudioOutput::UDPChannelCodec.'
        type: integer
      udpDecimationFactor:
        description: 'Decimation used before codec in UDP/RTP transmission. Ranges from 1 to 6.'
        type: integer
      udpAddress:
        description: "UDP destination address"
        type: string
      udpPort:
        description: "UDP destination port"
        type: integer

  LocationInformation:
    description: "Instance geolocation information"
    required:
      - latitude
      - longitude
    properties:
      latitude:
        description: "Lautitude in decimal degrees positive to the north"
        type: number
        format: float
      longitude:
        description: "Longitude in decimal degrees positive to the east"
        type: number
        format: float

  DVSerialDevices:
    description: "List of DV serial devices available in the system"
    required:
      - nbDevices
    properties:
      nbDevices:
        description: "Number of DV serial devices"
        type: integer
      dvSerialDevices:
        description: "Device names of DV serial devices"
        type: array
        items:
          $ref: "#/definitions/DVSerialDevice"

  DVSerialDevice:
    description: "DV serial device details"
    properties:
      deviceName:
        description: "Name of the serial device in the system"
        type: string

  AMBEDevices:
    description: "List of AMBE devices (serial or server address)"
    required:
      - nbDevices
    properties:
      nbDevices:
        description: "Number of DV serial devices"
        type: integer
      ambeDevices:
        description: "List of AMBE devices"
        type: array
        items:
          $ref: "#/definitions/AMBEDevice"

  AMBEDevice:
    description: "AMBE devices active in the system"
    properties:
      deviceRef:
        description: "Serial device name or server address"
        type: string
      delete:
        description: "1 if device is to be removed from active list"
        type: integer

  LimeRFEDevices:
    description: "List of LimeRFE devices (serial or server address)"
    required:
      - nbDevices
    properties:
      nbDevices:
        description: "Number of LimeRFE serial interfaces"
        type: integer
      limeRFEDevices:
        description: "List of LimeRFE devices"
        type: array
        items:
          $ref: "#/definitions/LimeRFEDevice"

  LimeRFEDevice:
    description: "LimeRFE device active in the system"
    properties:
      deviceRef:
        description: "Serial device name or server address"
        type: string

  Presets:
    description: "Settings presets"
    required:
      - nbGroups
    properties:
      nbGroups:
        description: "Number of preset groups"
        type: integer
      groups:
        type: array
        items:
          $ref: "#/definitions/PresetGroup"

  PresetGroup:
    description: "Group of presets"
    required:
      - groupName
      - nbPresets
    properties:
      groupName:
        description: "Name of the preset group"
        type: string
      nbPresets:
        description: "Number of presets in the group"
        type: integer
      presets:
        type: array
        items:
          $ref: "#/definitions/PresetItem"

  PresetIdentifier:
    description: "Settings preset item"
    required:
      - groupName
      - centerFrequency
      - type
      - name
    properties:
      groupName:
        description: "Name of the preset group"
        type: string
      centerFrequency:
        description: "Center freqeuency in Hz"
        type: integer
        format: int64
      type:
        description: "Type of device set (R: Rx, T: Tx)"
        type: string
      name:
        description: "Descriptive name of the preset"
        type: string

  PresetItem:
    description: "Settings preset item"
    required:
      - centerFrequency
      - type
      - name
    properties:
      centerFrequency:
        description: "Center freqeuency in Hz"
        type: integer
        format: int64
      type:
        description: "Type of device set (R: Rx, T: Tx)"
        type: string
      name:
        description: "Descriptive name of the preset"
        type: string

  PresetTransfer:
    description: "Preset transfer to or from a device set"
    required:
      - deviceSetIndex
      - preset
    properties:
      deviceSetIndex:
        description: "Index of the device set"
        type: integer
      preset:
        $ref: "#/definitions/PresetIdentifier"

  PresetImport:
    description: "Details to import preset from file in preset list"
    required:
      - filePath
    properties:
      groupName:
        description: "If present overrides imported preset group name with this name"
        type: string
      description:
        description: "If present overrides imported preset description with this description"
        type: string
      filePath:
        description: "Path of the import file"
        type: string

  PresetExport:
    description: "Details to export a preset to file"
    properties:
      filePath:
        description: "Path of the import file"
        type: string
      preset:
        $ref: "#/definitions/PresetIdentifier"

  DeviceReport:
    description: Base device report. Only the device report corresponding to the device specified in the deviceHwType is or should be present.
    discriminator: deviceHwType
    required:
      - deviceHwType
      - direction
    properties:
      deviceHwType:
        description: Device hardware type code
        type: string
      direction:
        description: 0 for Rx only, 1 for Tx only or 2 for any number and direction (default 0)
        type: integer
      airspyReport:
        $ref: "http://localhost:8081/api/swagger/include/Airspy.yaml#/AirspyReport"
      airspyHFReport:
        $ref: "http://localhost:8081/api/swagger/include/AirspyHF.yaml#/AirspyHFReport"
      bladeRF2InputReport:
        $ref: "http://localhost:8081/api/swagger/include/BladeRF2.yaml#/BladeRF2InputReport"
      bladeRF2OutputReport:
        $ref: "http://localhost:8081/api/swagger/include/BladeRF2.yaml#/BladeRF2OutputReport"
      fileInputReport:
        $ref: "http://localhost:8081/api/swagger/include/FileInput.yaml#/FileInputReport"
      limeSdrInputReport:
        $ref: "http://localhost:8081/api/swagger/include/LimeSdr.yaml#/LimeSdrInputReport"
      kiwiSDRReport:
        $ref: "http://localhost:8081/api/swagger/include/KiwiSDR.yaml#/KiwiSDRReport"
      limeSdrOutputReport:
        $ref: "http://localhost:8081/api/swagger/include/LimeSdr.yaml#/LimeSdrOutputReport"
      localInputReport:
        $ref: "http://localhost:8081/api/swagger/include/LocalInput.yaml#/LocalInputReport"
      localOutputReport:
        $ref: "http://localhost:8081/api/swagger/include/LocalOutput.yaml#/LocalOutputReport"
      perseusReport:
        $ref: "http://localhost:8081/api/swagger/include/Perseus.yaml#/PerseusReport"
      plutoSdrInputReport:
        $ref: "http://localhost:8081/api/swagger/include/PlutoSdr.yaml#/PlutoSdrInputReport"
      plutoSdrOutputReport:
        $ref: "http://localhost:8081/api/swagger/include/PlutoSdr.yaml#/PlutoSdrOutputReport"
      rtlSdrReport:
        $ref: "http://localhost:8081/api/swagger/include/RtlSdr.yaml#/RtlSdrReport"
      remoteOutputReport:
        $ref: "http://localhost:8081/api/swagger/include/RemoteOutput.yaml#/RemoteOutputReport"
      remoteInputReport:
        $ref: "http://localhost:8081/api/swagger/include/RemoteInput.yaml#/RemoteInputReport"
      sdrPlayReport:
        $ref: "http://localhost:8081/api/swagger/include/SDRPlay.yaml#/SDRPlayReport"
      soapySDRInputReport:
        $ref: "http://localhost:8081/api/swagger/include/SoapySDR.yaml#/SoapySDRReport"
      soapySDROutputReport:
        $ref: "http://localhost:8081/api/swagger/include/SoapySDR.yaml#/SoapySDRReport"
      xtrxInputReport:
        $ref: "http://localhost:8081/api/swagger/include/Xtrx.yaml#/XtrxInputReport"
      xtrxOutputReport:
        $ref: "http://localhost:8081/api/swagger/include/Xtrx.yaml#/XtrxOutputReport"

  ChannelReport:
    description: Base channel report. Only the channel report corresponding to the channel specified in the channelType field is or should be present.
    discriminator: channelType
    properties:
      channelType:
        description: Channel type code
        type: string
      direction:
        description: 0 for Rx only, 1 for Tx only or 2 for any number and direction (default 0)
        type: integer
      AMDemodReport:
        $ref: "http://localhost:8081/api/swagger/include/AMDemod.yaml#/AMDemodReport"
      AMModReport:
        $ref: "http://localhost:8081/api/swagger/include/AMMod.yaml#/AMModReport"
      ATVModReport:
        $ref: "http://localhost:8081/api/swagger/include/ATVMod.yaml#/ATVModReport"
      BFMDemodReport:
        $ref: "http://localhost:8081/api/swagger/include/BFMDemod.yaml#/BFMDemodReport"
      DSDDemodReport:
        $ref: "http://localhost:8081/api/swagger/include/DSDDemod.yaml#/DSDDemodReport"
      FileSourceReport:
        $ref: "http://localhost:8081/api/swagger/include/FileSource.yaml#/FileSourceReport"
      FreeDVDemodReport:
        $ref: "http://localhost:8081/api/swagger/include/FreeDVDemod.yaml#/FreeDVDemodReport"
      FreeDVModReport:
        $ref: "http://localhost:8081/api/swagger/include/FreeDVMod.yaml#/FreeDVModReport"
      FreqTrackerReport:
        $ref: "http://localhost:8081/api/swagger/include/FreqTracker.yaml#/FreqTrackerReport"
      NFMDemodReport:
        $ref: "http://localhost:8081/api/swagger/include/NFMDemod.yaml#/NFMDemodReport"
      NFMModReport:
        $ref: "http://localhost:8081/api/swagger/include/NFMMod.yaml#/NFMModReport"
      SSBDemodReport:
        $ref: "http://localhost:8081/api/swagger/include/SSBDemod.yaml#/SSBDemodReport"
      RemoteSourceReport:
        $ref: "http://localhost:8081/api/swagger/include/RemoteSource.yaml#/RemoteSourceReport"
      SSBModReport:
        $ref: "http://localhost:8081/api/swagger/include/SSBMod.yaml#/SSBModReport"
      UDPSourceReport:
        $ref: "http://localhost:8081/api/swagger/include/UDPSource.yaml#/UDPSourceReport"
      UDPSinkReport:
        $ref: "http://localhost:8081/api/swagger/include/UDPSink.yaml#/UDPSinkReport"
      WFMDemodReport:
        $ref: "http://localhost:8081/api/swagger/include/WFMDemod.yaml#/WFMDemodReport"
      WFMModReport:
        $ref: "http://localhost:8081/api/swagger/include/WFMMod.yaml#/WFMModReport"

responses:

  Response_500:
    description: Error
    schema:
      $ref: "#/definitions/ErrorResponse"

  Response_501:
    description: Function not implemented
    schema:
      $ref: "#/definitions/ErrorResponse"

